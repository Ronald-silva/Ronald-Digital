import { useState, useEffect } from "react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Bot, Send, X, User } from "lucide-react";
import saraAvatar from "@/assets/sara-avatar.png";

// Estilos CSS para anima√ß√µes neuroci√™ncia-baseadas
const chatButtonStyles = `
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateX(-50%) translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateX(-50%) translateY(0);
    }
  }
  
  @keyframes magneticPull {
    0%, 100% { transform: scale(1) rotate(0deg); }
    25% { transform: scale(1.05) rotate(1deg); }
    50% { transform: scale(1.1) rotate(0deg); }
    75% { transform: scale(1.05) rotate(-1deg); }
  }
  
  @keyframes breathe {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.02); }
  }
  
  .chat-button-magnetic:hover {
    animation: magneticPull 0.6s ease-in-out infinite;
  }
  
  .chat-button-breathe {
    animation: breathe 4s ease-in-out infinite;
  }
`;

interface Message {
  id: number;
  type: 'user' | 'bot';
  text: string;
  time: string;
}

interface ConversationContext {
  clientName?: string;
  projectType?: string;
  budget?: string;
  timeline?: string;
  businessType?: string;
  currentStep: number;
  topics: string[];
  lastIntent?: string;
}

export function ChatWidget() {
  const [isOpen, setIsOpen] = useState(false);
  const [messages, setMessages] = useState<Message[]>([]);
  const [inputText, setInputText] = useState("");
  const [context, setContext] = useState<ConversationContext>({
    currentStep: 0,
    topics: []
  });
  
  // Estados para efeitos psicol√≥gicos
  const [showUrgency, setShowUrgency] = useState(false);
  const [attentionPulse, setAttentionPulse] = useState(false);
  const [visitTime, setVisitTime] = useState(0);

  // Efeito de aten√ß√£o baseado em tempo (Neuroci√™ncia: Janela de aten√ß√£o)
  useEffect(() => {
    const timer = setInterval(() => {
      setVisitTime(prev => prev + 1);
    }, 1000);

    // Ap√≥s 10 segundos, ativa urg√™ncia sutil
    const urgencyTimer = setTimeout(() => {
      setShowUrgency(true);
    }, 10000);

    // Ap√≥s 30 segundos, pulso de aten√ß√£o (momento de decis√£o)
    const attentionTimer = setTimeout(() => {
      setAttentionPulse(true);
      // Remove ap√≥s 5 segundos para n√£o ser irritante
      setTimeout(() => setAttentionPulse(false), 5000);
    }, 30000);

    return () => {
      clearInterval(timer);
      clearTimeout(urgencyTimer);
      clearTimeout(attentionTimer);
    };
  }, []);

  const addMessage = (type: 'user' | 'bot', text: string) => {
    const newMessage: Message = {
      id: Date.now(),
      type,
      text,
      time: new Date().toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' })
    };
    setMessages(prev => [...prev, newMessage]);
  };

  // Extrai informa√ß√µes da mensagem do usu√°rio
  const extractInfo = (message: string): Partial<ConversationContext> => {
    const lowerMsg = message.toLowerCase();
    const info: Partial<ConversationContext> = {};
    
    // Detecta nome
    const namePatterns = [
      /(?:sou|me chamo|meu nome √©|eu sou)\s+([a-z√°√†√¢√£√©√®√™√≠√Ø√≥√¥√µ√∂√∫√ß√±]+)/i,
      /(?:^|\s)([A-Z√Å√Ä√Ç√É√â√à√ä√ç√è√ì√î√ï√ñ√ö√á√ë][a-z√°√†√¢√£√©√®√™√≠√Ø√≥√¥√µ√∂√∫√ß√±]+)(?:\s|$)/
    ];
    for (const pattern of namePatterns) {
      const match = message.match(pattern);
      if (match && match[1] && match[1].length > 2) {
        info.clientName = match[1];
        break;
      }
    }
    
    // Detecta tipo de projeto
    if (lowerMsg.includes('landing') || lowerMsg.includes('p√°gina de vendas')) {
      info.projectType = 'landing-page';
    } else if (lowerMsg.includes('portf√≥lio') || lowerMsg.includes('portfolio')) {
      info.projectType = 'portfolio';
    } else if (lowerMsg.includes('loja') || lowerMsg.includes('e-commerce') || lowerMsg.includes('vender')) {
      info.projectType = 'e-commerce';
    } else if (lowerMsg.includes('blog')) {
      info.projectType = 'blog';
    } else if (lowerMsg.includes('site')) {
      info.projectType = 'website';
    }
    
    // Detecta tipo de neg√≥cio com mais varia√ß√µes
    const businessTypes = [
      { keywords: ['restaurante', 'bar', 'lanchonete', 'pizzaria', 'hamburgueria'], type: 'restaurante' },
      { keywords: ['loja', 'com√©rcio', 'varejo', 'boutique', 'magazine'], type: 'loja' },
      { keywords: ['consultoria', 'consultor', 'advogado', 'contador'], type: 'consultoria' },
      { keywords: ['cl√≠nica', 'm√©dico', 'dentista', 'fisioterapeuta'], type: 'cl√≠nica' },
      { keywords: ['academia', 'personal', 'fitness', 'gin√°stica'], type: 'academia' },
      { keywords: ['sal√£o', 'barbearia', 'est√©tica', 'beleza'], type: 'sal√£o de beleza' },
      { keywords: ['oficina', 'mec√¢nica', 'auto', 'carro'], type: 'oficina' },
      { keywords: ['escola', 'curso', 'educa√ß√£o', 'ensino'], type: 'educa√ß√£o' },
      { keywords: ['imobili√°ria', 'corretor', 'im√≥vel'], type: 'imobili√°ria' }
    ];
    
    for (const business of businessTypes) {
      for (const keyword of business.keywords) {
        if (lowerMsg.includes(keyword)) {
          info.businessType = business.type;
          break;
        }
      }
      if (info.businessType) break;
    }
    
    // Detecta or√ßamento
    if (lowerMsg.includes('500') || lowerMsg.includes('quinhentos')) {
      info.budget = 'at√©-500';
    } else if (lowerMsg.includes('1000') || lowerMsg.includes('mil')) {
      info.budget = '500-1000';
    } else if (lowerMsg.includes('2000') || lowerMsg.includes('dois mil')) {
      info.budget = '1000-2000';
    } else if (lowerMsg.includes('barato') || lowerMsg.includes('econ√¥mico')) {
      info.budget = 'baixo';
    }
    
    // Detecta prazo
    if (lowerMsg.includes('urgente') || lowerMsg.includes('r√°pido')) {
      info.timeline = 'urgente';
    } else if (lowerMsg.includes('semana')) {
      info.timeline = '1-semana';
    } else if (lowerMsg.includes('m√™s')) {
      info.timeline = '1-mes';
    }
    
    return info;
  };

  // Determina a inten√ß√£o da mensagem
  const getIntent = (message: string): string => {
    const lowerMsg = message.toLowerCase();
    
    if (lowerMsg.includes('oi') || lowerMsg.includes('ol√°') || lowerMsg.includes('bom dia')) {
      return 'greeting';
    } else if (lowerMsg.includes('pre√ßo') || lowerMsg.includes('valor') || lowerMsg.includes('custa')) {
      return 'pricing';
    } else if (lowerMsg.includes('prazo') || lowerMsg.includes('tempo') || lowerMsg.includes('demora')) {
      return 'timeline';
    } else if (lowerMsg.includes('exemplo') || lowerMsg.includes('portf√≥lio') || lowerMsg.includes('trabalho')) {
      return 'examples';
    } else if (lowerMsg.includes('contato') || lowerMsg.includes('telefone') || lowerMsg.includes('whatsapp')) {
      return 'contact';
    } else if (lowerMsg.includes('sim') || lowerMsg.includes('quero') || lowerMsg.includes('aceito')) {
      return 'positive';
    } else if (lowerMsg.includes('n√£o') || lowerMsg.includes('nao')) {
      return 'negative';
    }
    return 'information';
  };

  // Sistema Multi-Especialista: Neil Patel + Jill Konrath + Gary Vaynerchuk
  const getActiveExpert = (step: number, context: ConversationContext): 'neil' | 'jill' | 'gary' => {
    if (step <= 2) return 'neil';  // Neil Patel - Capta√ß√£o e descoberta
    if (step <= 4) return 'jill';  // Jill Konrath - Qualifica√ß√£o BANT
    return 'gary';                 // Gary Vaynerchuk - Vendas e fechamento
  };

  // Sara com expertise de Neil Patel - Capta√ß√£o e Marketing
  const getSaraMarketingResponse = (message: string, context: ConversationContext): string => {
    const intent = getIntent(message);
    const step = context.currentStep;
    
    // Sara usa conhecimento de Neil para descobrir necessidades e educar sobre valor
    if (step === 0) {
      if (intent === 'greeting') {
        return "üëã Oi! Sou a Sara da Ronald Digital! ‚ú®\n\nComo especialista em marketing digital, sei que um site bem feito pode aumentar suas vendas em at√© 300%. Que tipo de projeto voc√™ tem em mente?";
      }
      return "Oi! üöÄ Vou te ajudar a criar algo que realmente converte visitantes em clientes.\n\nMe conta: qual seu objetivo principal? Vender mais, gerar leads, mostrar portf√≥lio...?";
    }
    
    if (step === 1) {
      if (context.projectType) {
        const insights = getNeilInsights(context.projectType);
        return `${getProjectName(context.projectType)} ${insights}\n\n${context.clientName ? `${context.clientName}, ` : ''}Para maximizar os resultados, preciso entender seu neg√≥cio. Que tipo de empresa/atividade voc√™ tem?`;
      }
      return "Perfeito! Para criar uma estrat√©gia que realmente funciona, me conta: √© para que tipo de neg√≥cio?";
    }
    
    if (step === 2) {
      if (context.businessType) {
        const marketingAdvice = getNeilMarketingAdvice(context.businessType, context.projectType);
        return `Excelente! ${context.businessType} tem um potencial incr√≠vel online! üìà\n\n${marketingAdvice}\n\nAgora preciso entender seu investimento para criar a proposta perfeita. Qual faixa de or√ßamento voc√™ tem dispon√≠vel?`;
      } else {
        // Se n√£o detectou o tipo de neg√≥cio, pergunta diretamente
        return `Perfeito! Para criar a estrat√©gia ideal, me conta: que tipo de neg√≥cio voc√™ tem? Restaurante, loja, consultoria, servi√ßos...?\n\nIsso me ajuda a personalizar tudo para seu segmento! üéØ`;
      }
    }
    
    return "Vou te ajudar a encontrar a melhor solu√ß√£o para seu neg√≥cio!";
  };

  // Sara com expertise de Jill Konrath - Qualifica√ß√£o BANT
  const getSaraQualificationResponse = (message: string, context: ConversationContext): string => {
    const intent = getIntent(message);
    const step = context.currentStep;
    
    // Sara usa metodologia BANT para qualificar leads
    if (step === 3) {
      if (!context.budget) {
        return `Para criar a proposta perfeita para voc√™, preciso entender seu investimento dispon√≠vel. üí∞\n\nQual faixa de or√ßamento voc√™ tem em mente?\n\n‚Ä¢ At√© R$ 1.000 (projetos essenciais)\n‚Ä¢ R$ 1.000-2.500 (projetos completos)\n‚Ä¢ Acima de R$ 2.500 (projetos premium)`;
      }
      
      const budgetAnalysis = getJillBudgetAnalysis(context.budget, context.projectType);
      return `${budgetAnalysis}\n\nAgora sobre o prazo: quando voc√™ precisa que o projeto esteja funcionando? Isso me ajuda a planejar a melhor estrat√©gia de entrega. ‚è∞`;
    }
    
    if (step === 4) {
      const bantScore = calculateBANTScore(context);
      const qualification = getJillQualification(bantScore, context);
      
      return `${getTimelineResponse(context.timeline)}\n\nüìä **An√°lise completa do seu projeto:**\n${getSummary(context)}\n\n${qualification}\n\nAgora vou preparar uma proposta personalizada para voc√™! üöÄ`;
    }
    
    return "Deixe-me entender melhor suas necessidades para criar a proposta ideal!";
  };

  // Sara com expertise de Gary Vaynerchuk - Vendas e Fechamento
  const getSaraSalesResponse = (message: string, context: ConversationContext): string => {
    const intent = getIntent(message);
    const bantScore = calculateBANTScore(context);
    
    // Sara usa energia e t√©cnicas de Gary para fechar vendas
    if (context.currentStep >= 5) {
      if (intent === 'positive') {
        return `ISSO A√ç! üî• Adoro essa energia!\n\nVou criar uma proposta que vai fazer seu neg√≥cio DECOLAR! Aqui est√° o que voc√™ vai receber:\n\n${getGaryProposal(context)}\n\nüí∞ **Investimento:** ${getGaryPricing(context)}\n\nüéÅ **B√îNUS EXCLUSIVO:** Consultoria de marketing digital gratuita!\n\nMe passa seu WhatsApp que fechamos isso AGORA!`;
      }
      
      if (intent === 'negative' || message.toLowerCase().includes('caro')) {
        return getGaryObjectionHandling(message, context);
      }
      
      if (intent === 'contact') {
        return `PERFEITO! üöÄ Vamos fazer neg√≥cio!\n\nMe chama no WhatsApp: (85) 99199-3833\n\nOu me passa seu n√∫mero que eu te chamo AGORA! Vou mandar a proposta completa e podemos come√ßar hoje mesmo!`;
      }
    }
    
    // Primeira abordagem de vendas da Sara
    const energy = bantScore >= 3 ? "üî• VOC√ä EST√Å PRONTO PARA DECOLAR!" : "üöÄ VAMOS FAZER SEU NEG√ìCIO CRESCER!";
    
    return `${energy}\n\nVou ser DIRETA com voc√™:\n\n${getGaryValueProp(context)}\n\nüí∞ **Investimento:** ${getGaryPricing(context)}\n\nüéÅ **B√îNUS:** Se fechar hoje, incluo consultoria de marketing GRATUITA!\n\nTOPA FAZER NEG√ìCIO?`;
  };

  // Gera resposta usando o especialista apropriado
  const generateIntelligentResponse = (message: string, currentContext: ConversationContext): string => {
    const activeExpert = getActiveExpert(currentContext.currentStep, currentContext);
    
    // Evita repetir t√≥picos j√° abordados
    const intent = getIntent(message);
    if (currentContext.topics.includes(intent) && intent !== 'information') {
      if (intent === 'pricing' && currentContext.projectType) {
        return `Como ${activeExpert === 'neil' ? 'mencionei' : activeExpert === 'jill' ? 'a Jill analisou' : 'calculamos'}, para ${getProjectName(currentContext.projectType)} fica entre R$ ${getPriceRange(currentContext.projectType)}.\n\n${getNextQuestion(currentContext)}`;
      }
    }
    
    // Sara usa a expertise apropriada para cada etapa
    switch (activeExpert) {
      case 'neil':
        return getSaraMarketingResponse(message, currentContext);
      case 'jill':
        return getSaraQualificationResponse(message, currentContext);
      case 'gary':
        return getSaraSalesResponse(message, currentContext);
      default:
        return "Vou te ajudar a encontrar a melhor solu√ß√£o!";
    }
  };

  // Fun√ß√µes auxiliares
  const getProjectName = (type: string): string => {
    const names: { [key: string]: string } = {
      'landing-page': 'Landing Page',
      'portfolio': 'Portf√≥lio',
      'e-commerce': 'E-commerce',
      'blog': 'Blog',
      'website': 'Site institucional'
    };
    return names[type] || 'Site';
  };

  const getProjectBenefits = (type: string): string => {
    const benefits: { [key: string]: string } = {
      'landing-page': 'Ideal para converter visitantes em clientes! üéØ',
      'portfolio': 'Perfeito para mostrar seu trabalho e conquistar credibilidade! üé®',
      'e-commerce': 'O futuro das vendas! Vender online 24/7! üõí',
      'blog': '√ìtimo para compartilhar conhecimento e atrair clientes! ‚úçÔ∏è',
      'website': 'Essencial para presen√ßa digital profissional! üåê'
    };
    return benefits[type] || 'Excelente escolha!';
  };

  const getPriceRange = (type: string): string => {
    const prices: { [key: string]: string } = {
      'landing-page': '500-1.000',
      'portfolio': '400-800',
      'e-commerce': '1.200-3.000',
      'blog': '600-1.200',
      'website': '800-2.000'
    };
    return prices[type] || '500-2.000';
  };

  const getBusinessSpecificAdvice = (business: string, project?: string): string => {
    if (business === 'restaurante' && project === 'website') {
      return "Para restaurantes, recomendo incluir card√°pio online e sistema de reservas!";
    } else if (business === 'loja' && project !== 'e-commerce') {
      return "Que tal considerar um e-commerce? Suas vendas podem aumentar muito online!";
    }
    return "Vou criar algo perfeito para seu segmento!";
  };

  const getBudgetResponse = (budget: string, project?: string): string => {
    if (budget === 'baixo') {
      return "Sem problemas! Posso criar algo incr√≠vel dentro do seu or√ßamento. Vamos encontrar a melhor solu√ß√£o!";
    } else if (budget === 'at√©-500') {
      return "Com esse or√ßamento, posso fazer uma landing page bem otimizada ou um portf√≥lio profissional!";
    }
    return "Perfeito! Com esse or√ßamento posso criar algo realmente completo e profissional!";
  };

  const getTimelineResponse = (timeline?: string): string => {
    if (timeline === 'urgente') {
      return "Urgente? Sem problemas! Posso priorizar seu projeto e entregar em 3-5 dias!";
    } else if (timeline === '1-semana') {
      return "Uma semana √© um prazo √≥timo! D√° para fazer algo bem caprichado!";
    }
    return "√ìtimo prazo! Vou poder caprichar em todos os detalhes!";
  };

  const getSummary = (ctx: ConversationContext): string => {
    return `‚Ä¢ Cliente: ${ctx.clientName || 'N√£o informado'}\n‚Ä¢ Projeto: ${getProjectName(ctx.projectType || 'website')}\n‚Ä¢ Neg√≥cio: ${ctx.businessType || 'N√£o especificado'}\n‚Ä¢ Or√ßamento: ${ctx.budget || 'A definir'}\n‚Ä¢ Prazo: ${ctx.timeline || 'Flex√≠vel'}`;
  };

  const getContextualResponse = (message: string, ctx: ConversationContext): string => {
    const lowerMsg = message.toLowerCase();
    
    if (lowerMsg.includes('exemplo') || lowerMsg.includes('portf√≥lio')) {
      return "Claro! Posso te mostrar alguns trabalhos. Acesse meu portf√≥lio em ronalddigital.com/portfolio ou me chama no WhatsApp que envio exemplos espec√≠ficos para seu segmento!";
    } else if (lowerMsg.includes('prazo')) {
      return `Normalmente entrego em 5-10 dias √∫teis. ${ctx.timeline === 'urgente' ? 'Mas como √© urgente, posso priorizar!' : 'Se precisar mais r√°pido, posso acelerar!'}`;
    }
    
    return "Entendi! Tem mais alguma d√∫vida sobre o projeto? Estou aqui para te ajudar! üòä";
  };

  // Fun√ß√µes espec√≠ficas do Neil Patel
  const getNeilInsights = (projectType: string): string => {
    const insights: { [key: string]: string } = {
      'landing-page': '√© PERFEITA para convers√£o! Pode aumentar suas vendas em at√© 400% com as estrat√©gias certas! üéØ',
      'portfolio': '√© essencial para credibilidade! 94% dos clientes pesquisam online antes de contratar! üé®',
      'e-commerce': '√© o FUTURO! E-commerce cresceu 300% nos √∫ltimos anos! üõí',
      'blog': '√© uma m√°quina de leads! Empresas que blogam geram 67% mais leads! ‚úçÔ∏è',
      'website': '√© fundamental! 75% dos consumidores julgam credibilidade pelo site! üåê'
    };
    return insights[projectType] || 'tem potencial incr√≠vel para seu neg√≥cio!';
  };

  const getNeilMarketingAdvice = (business?: string, project?: string): string => {
    if (!business) return "Vou aplicar as melhores estrat√©gias de marketing digital para seu segmento!";
    
    switch (business) {
      case 'restaurante':
        return "Restaurantes com presen√ßa digital forte vendem 23% mais! Vou incluir card√°pio online, sistema de reservas e integra√ß√£o com delivery!";
      case 'loja':
        return project !== 'e-commerce' 
          ? "Lojas f√≠sicas que vendem online faturam 40% mais! Que tal considerarmos um e-commerce tamb√©m?"
          : "Perfeito! E-commerce √© essencial para lojas modernas! Vou criar algo que vende 24/7!";
      case 'consultoria':
        return "Consultores com sites profissionais cobram at√© 60% mais! Vou focar em autoridade e capta√ß√£o de leads!";
      case 'cl√≠nica':
        return "Cl√≠nicas com agendamento online t√™m 35% mais consultas! Vou incluir sistema de marca√ß√£o e √°rea do paciente!";
      case 'academia':
        return "Academias digitais ret√™m 50% mais alunos! Vou criar √°rea de treinos e acompanhamento online!";
      case 'sal√£o de beleza':
        return "Sal√µes com agendamento online t√™m 40% menos cancelamentos! Vou incluir sistema de hor√°rios e galeria!";
      case 'educa√ß√£o':
        return "Escolas online crescem 200% mais r√°pido! Vou criar plataforma de cursos e √°rea do aluno!";
      case 'imobili√°ria':
        return "Imobili√°rias digitais vendem 60% mais r√°pido! Vou incluir busca avan√ßada e tour virtual!";
      default:
        return `${business.charAt(0).toUpperCase() + business.slice(1)} tem grande potencial online! Vou criar estrat√©gias espec√≠ficas para seu segmento!`;
    }
  };

  // Fun√ß√µes espec√≠ficas da Jill Konrath
  const getJillBudgetAnalysis = (budget?: string, project?: string): string => {
    if (budget === 'baixo' || budget === 'at√©-500') {
      return "Entendo! Vamos trabalhar com intelig√™ncia dentro do seu or√ßamento. Posso criar algo eficiente e que gere resultados!";
    } else if (budget === '500-1000') {
      return "Excelente! Com esse investimento posso incluir funcionalidades avan√ßadas e um design realmente impactante!";
    } else if (budget === '1000-2000') {
      return "Perfeito! Esse or√ßamento permite criar algo premium com todas as funcionalidades que seu neg√≥cio precisa!";
    }
    return "√ìtimo! Vamos criar algo que traga retorno muito superior ao investimento!";
  };

  const calculateBANTScore = (context: ConversationContext): number => {
    let score = 0;
    if (context.budget) score += 1;                    // Budget
    if (context.clientName) score += 1;               // Authority (assume que quem fala decide)
    if (context.projectType && context.businessType) score += 1; // Need
    if (context.timeline) score += 1;                 // Timeline
    return score;
  };

  const getJillQualification = (score: number, context: ConversationContext): string => {
    if (score >= 3) {
      return "üî• **LEAD QUENTE!** Voc√™ tem tudo definido: projeto, or√ßamento e prazo. Vamos fazer acontecer!";
    } else if (score >= 2) {
      return "‚≠ê **LEAD QUALIFICADO!** Temos boas informa√ß√µes. Vou preparar uma proposta sob medida!";
    }
    return "üí° **LEAD PROMISSOR!** Vamos alinhar alguns detalhes para criar a proposta perfeita!";
  };

  // Fun√ß√µes espec√≠ficas do Gary Vaynerchuk
  const getGaryInitialPitch = (context: ConversationContext, bantScore: number): string => {
    const energy = bantScore >= 3 ? "üî• CARA, VOC√ä EST√Å PRONTO PARA DECOLAR!" : "üöÄ VAMOS FAZER SEU NEG√ìCIO CRESCER!";
    
    return `**Sara:** Agora voc√™ est√° com o Gary Vaynerchuk! üî•\n\n**Gary:** ${energy}\n\nSou o Gary, especialista em vendas, e vou ser DIRETO com voc√™:\n\n${getGaryValueProp(context)}\n\nüí∞ **Investimento:** ${getGaryPricing(context)}\n\nüéÅ **B√îNUS:** Se fechar hoje, incluo consultoria de marketing GRATUITA!\n\nTOPA FAZER NEG√ìCIO?`;
  };

  const getGaryValueProp = (context: ConversationContext): string => {
    const project = getProjectName(context.projectType || '');
    const business = context.businessType || 'seu neg√≥cio';
    
    return `Seu ${project.toLowerCase()} vai ser uma M√ÅQUINA DE VENDAS para ${business}!\n\n‚úÖ Design que CONVERTE\n‚úÖ Otimizado para Google\n‚úÖ Responsivo (funciona em qualquer dispositivo)\n‚úÖ Entrega R√ÅPIDA\n‚úÖ Suporte total`;
  };

  const getGaryPricing = (context: ConversationContext): string => {
    const basePrice = getPriceRange(context.projectType || '');
    const [min, max] = basePrice.split('-').map(p => parseInt(p.replace('.', '')));
    
    if (context.budget === 'baixo' || context.budget === 'at√©-500') {
      return `R$ ${min} (pre√ßo especial para voc√™!)`;
    } else if (context.timeline === 'urgente') {
      return `R$ ${max} (entrega expressa inclu√≠da!)`;
    }
    
    return `R$ ${min}-${max} (parcelamos em at√© 3x!)`;
  };

  const getGaryProposal = (context: ConversationContext): string => {
    const project = getProjectName(context.projectType || '');
    return `üéØ ${project} COMPLETO\nüé® Design profissional exclusivo\nüì± 100% responsivo\nüöÄ Otimizado para convers√£o\nüìà Integra√ß√£o com Google Analytics\nüîß 3 meses de suporte GRATUITO`;
  };

  const getGaryObjectionHandling = (message: string, context: ConversationContext): string => {
    const lowerMsg = message.toLowerCase();
    
    if (lowerMsg.includes('caro') || lowerMsg.includes('pre√ßo')) {
      return `Olha, eu ENTENDO sua preocupa√ß√£o com pre√ßo! üí∞\n\nMas pensa comigo: se esse site trouxer apenas 2 clientes novos por m√™s, j√° PAGOU o investimento!\n\nE olha s√≥: posso parcelar em 3x SEM JUROS! Fica s√≥ R$ ${Math.round(parseInt(getPriceRange(context.projectType || '').split('-')[0].replace('.', '')) / 3)} por m√™s!\n\nVale mais a pena investir em seu futuro ou continuar perdendo clientes? ü§î`;
    }
    
    if (lowerMsg.includes('pensar') || lowerMsg.includes('decidir')) {
      return `Claro, PENSAR √© importante! ü§î\n\nMas olha: enquanto voc√™ pensa, seus concorrentes est√£o VENDENDO online!\n\nTenho apenas 2 vagas este m√™s. Se n√£o for agora, s√≥ em mar√ßo!\n\nQue tal garantir sua vaga com apenas R$ 200 de entrada? O resto voc√™ paga s√≥ quando aprovar o design! TOPA?`;
    }
    
    return `Entendo sua hesita√ß√£o! Mas OPORTUNIDADES n√£o esperam! üöÄ\n\nVamos fazer assim: te dou 7 dias de GARANTIA TOTAL. Se n√£o gostar, devolvemos 100% do dinheiro!\n\nRisco ZERO para voc√™! BORA FAZER ACONTECER?`;
  };

  const getNextQuestion = (ctx: ConversationContext): string => {
    const expert = getActiveExpert(ctx.currentStep, ctx);
    
    if (expert === 'neil') {
      if (!ctx.projectType) return "Que tipo de projeto voc√™ precisa para alavancar seu neg√≥cio?";
      if (!ctx.businessType) return "Para que tipo de neg√≥cio vamos criar essa m√°quina de vendas?";
    } else if (expert === 'jill') {
      if (!ctx.budget) return "Qual investimento voc√™ tem dispon√≠vel para esse projeto?";
      if (!ctx.timeline) return "Quando voc√™ precisa que esteja funcionando?";
    } else {
      return "BORA FECHAR ESSE NEG√ìCIO?";
    }
    
    return "Como posso te ajudar mais?";
  };

  // üß† FALLBACK ULTRA INTELIGENTE - SARA OFFLINE MAS ESPERTA
  const getIntelligentFallback = (message: string, ctx: ConversationContext): string => {
    const lowerMsg = message.toLowerCase().trim();
    
    console.log(`üîÑ FALLBACK ATIVO para: "${message}"`);
    
    // üö® PRIORIDADE M√ÅXIMA: Perguntas diretas sobre neg√≥cio
    if (lowerMsg.includes('voc√™s fazem') || lowerMsg.includes('voc√™s vendem') || lowerMsg.includes('que tipo de') || lowerMsg.includes('voc√™s trabalham')) {
      if (lowerMsg.includes('computador') || lowerMsg.includes('hardware') || lowerMsg.includes('notebook')) {
        return "Ol√°! N√£o, n√≥s da Ronald Digital n√£o vendemos computadores. üíª\n\nSomos uma ag√™ncia especializada em:\n‚Ä¢ Sites profissionais\n‚Ä¢ Landing pages que convertem\n‚Ä¢ Portf√≥lios incr√≠veis\n\nQual projeto digital posso te ajudar a criar? üöÄ";
      }
      if (lowerMsg.includes('app') || lowerMsg.includes('aplicativo')) {
        return "Nosso foco √© em sites e p√°ginas web! üåê\n\nCriamos:\n‚Ä¢ Sites responsivos (funcionam como app)\n‚Ä¢ Landing pages otimizadas\n‚Ä¢ Portf√≥lios profissionais\n\nQue tal um site que funciona perfeitamente no celular? üì±";
      }
      return "N√≥s da Ronald Digital somos especialistas em projetos digitais! ‚ú®\n\nüéØ Nossos servi√ßos:\n‚Ä¢ Landing Pages (R$ 500-1.000)\n‚Ä¢ Portf√≥lios (R$ 400-800)\n‚Ä¢ Sites Completos (R$ 800-2.000)\n\nQual tipo de projeto voc√™ tem em mente?";
    }
    
    // ‚ö° PRIORIDADE ALTA: Express√µes de d√∫vida ou interesse
    if (lowerMsg.includes('d√∫vida') || lowerMsg.includes('pergunta') || lowerMsg.includes('me ajuda') || lowerMsg.includes('queria saber')) {
      return "Claro! Adoro ajudar com projetos digitais! üòä\n\nSou especialista em criar sites que realmente vendem. Qual sua principal d√∫vida?\n\nüí° Posso te ajudar com:\n‚Ä¢ Estrat√©gia digital\n‚Ä¢ Pre√ßos e prazos\n‚Ä¢ Exemplos de trabalhos";
    }
    
    // üí∞ PERGUNTAS SOBRE PRE√áOS (ALTA PRIORIDADE)
    if (lowerMsg.includes('pre√ßo') || lowerMsg.includes('valor') || lowerMsg.includes('custa') || lowerMsg.includes('or√ßamento')) {
      return "√ìtima pergunta! üí∞ Nossos pre√ßos s√£o super justos:\n\nüéØ **Landing Pages:** R$ 500-1.000\n(Perfeitas para vender produtos/servi√ßos)\n\nüé® **Portf√≥lios:** R$ 400-800\n(Ideais para mostrar seu trabalho)\n\nüåê **Sites Completos:** R$ 800-2.000\n(Presen√ßa digital completa)\n\n‚ú® **Parcelamos em at√© 3x sem juros!**\n\nQue tipo de projeto voc√™ precisa?";
    }
    
    // üéØ ESPECIFICA√á√ÉO DETALHADA DE PROJETO
    if ((lowerMsg.includes('preciso de um site') || lowerMsg.includes('quero um site')) && (lowerMsg.includes('loja') || lowerMsg.includes('empresa') || lowerMsg.includes('neg√≥cio'))) {
      
      // Detecta tipo espec√≠fico de neg√≥cio
      if (lowerMsg.includes('loja de roupas') || lowerMsg.includes('roupas')) {
        return "Perfeito! Loja de roupas √© um segmento incr√≠vel! üëó‚ú®\n\nPara lojas de moda, recomendo um e-commerce completo com:\n‚Ä¢ Cat√°logo organizado por categoria/marca\n‚Ä¢ Sistema de filtros (tamanho, cor, pre√ßo)\n‚Ä¢ Carrinho de compras otimizado\n‚Ä¢ Integra√ß√£o com redes sociais\n\nüí∞ **Investimento:** R$ 1.200-2.500\n‚è∞ **Prazo:** 10-15 dias\n\nQual seu or√ßamento para esse projeto?";
      }
      
      if (lowerMsg.includes('restaurante')) {
        return "Que √≥timo! Restaurante √© um segmento que vende muito online! üçï\n\nPara restaurantes, recomendo:\n‚Ä¢ Card√°pio digital interativo\n‚Ä¢ Sistema de pedidos online\n‚Ä¢ Integra√ß√£o com delivery\n‚Ä¢ √Årea de reservas\n\nüí∞ **Investimento:** R$ 800-1.800\n‚è∞ **Prazo:** 7-12 dias\n\nQual seu or√ßamento dispon√≠vel?";
      }
      
      // Resposta gen√©rica para outros tipos
      return "Excelente! Vou criar algo perfeito para seu neg√≥cio! üöÄ\n\nPara dar o or√ßamento exato, preciso saber:\n‚Ä¢ Qual seu or√ßamento dispon√≠vel?\n‚Ä¢ Para quando voc√™ precisa?\n‚Ä¢ Tem prefer√™ncia de funcionalidades?\n\nCom essas informa√ß√µes, posso criar uma proposta sob medida!";
    }

    // üéØ INTERESSE DE COMPRA GERAL
    if (lowerMsg.includes('quero') || lowerMsg.includes('preciso') || lowerMsg.includes('gostaria') || lowerMsg.includes('interessado')) {
      return "Que √≥timo! Fico feliz em te ajudar! üöÄ\n\nPara criar a proposta perfeita, me conta:\n‚Ä¢ Que tipo de projeto? (site, landing page, portf√≥lio)\n‚Ä¢ Para que tipo de neg√≥cio?\n‚Ä¢ Qual seu prazo?\n\nüí° **Dica:** Uma landing page bem feita pode aumentar suas vendas em 300%!";
    }
    
    // üëã PERGUNTAS PESSOAIS SOBRE A SARA
    if (lowerMsg.includes('qual seu nome') || lowerMsg.includes('como voc√™ se chama') || lowerMsg.includes('quem √© voc√™') || lowerMsg.includes('seu nome')) {
      const personalResponses = [
        "Oi! Eu sou a Sara! üòä\n\nSou especialista em marketing digital da Ronald Digital. Meu trabalho √© te ajudar a criar sites incr√≠veis que realmente vendem!\n\nE voc√™, qual seu nome?",
        "Prazer! Sou a Sara, sua consultora digital! ‚ú®\n\nTrabalho na Ronald Digital ajudando pessoas como voc√™ a crescerem online.\n\nComo posso te chamar?",
        "Oi! Me chamo Sara e sou apaixonada por criar sites que transformam visitantes em clientes! üöÄ\n\nQual seu nome?"
      ];
      
      return personalResponses[Math.floor(Math.random() * personalResponses.length)];
    }

    // ü§ñ PERGUNTAS SOBRE SER IA/ROB√î
    if (lowerMsg.includes('voc√™ √© rob√¥') || lowerMsg.includes('√© intelig√™ncia artificial') || lowerMsg.includes('√© ia') || lowerMsg.includes('√© bot')) {
      return "Olha, sou uma IA sim, mas uma IA bem especial! üòä\n\nFui criada para ser sua parceira digital, n√£o apenas um rob√¥ que responde perguntas. Tenho personalidade pr√≥pria e genu√≠no interesse em te ajudar!\n\nPode conversar comigo naturalmente - entendo contexto e sempre busco a melhor solu√ß√£o para voc√™.\n\nEnt√£o, como posso te ajudar a decolar na internet? üöÄ";
    }

    // üëã SAUDA√á√ïES INTELIGENTES
    if (lowerMsg.includes('oi') || lowerMsg.includes('ol√°') || lowerMsg.includes('ola')) {
      const hour = new Date().getHours();
      let greeting = "Oi";
      if (hour >= 6 && hour < 12) greeting = "Bom dia";
      else if (hour >= 12 && hour < 18) greeting = "Boa tarde";
      else if (hour >= 18 || hour < 6) greeting = "Boa noite";
      
      return `${greeting}! Que bom te ver por aqui! üòä\n\nSou a Sara, especialista em criar sites que realmente vendem! üöÄ\n\nComo posso te ajudar hoje? Precisa de:\n‚Ä¢ Site profissional?\n‚Ä¢ Landing page?\n‚Ä¢ Portf√≥lio incr√≠vel?`;
    }
    
    if (lowerMsg.includes('bom dia') || lowerMsg.includes('boa tarde') || lowerMsg.includes('boa noite')) {
      return "Oi! Que educa√ß√£o! üòä Prazer em te conhecer!\n\nSou a Sara da Ronald Digital, especialista em transformar ideias em sites incr√≠veis! ‚ú®\n\nMe conta: que tipo de projeto digital voc√™ tem em mente?";
    }
    
    // üé® PERGUNTAS SOBRE SERVI√áOS ESPEC√çFICOS
    if (lowerMsg.includes('portf√≥lio') || lowerMsg.includes('portfolio')) {
      return "Excelente escolha! üé® Portf√≥lios s√£o essenciais para:\n\n‚úÖ Mostrar seu trabalho\n‚úÖ Conquistar credibilidade\n‚úÖ Atrair clientes ideais\n\nüí∞ **Pre√ßo:** R$ 400-800\n‚è∞ **Prazo:** 5-7 dias\n\nQue tipo de portf√≥lio voc√™ precisa? (fot√≥grafo, designer, arquiteto...)";
    }
    
    if (lowerMsg.includes('landing page') || lowerMsg.includes('p√°gina de vendas')) {
      return "Perfeito! üéØ Landing pages s√£o m√°quinas de vendas!\n\nüöÄ **Benef√≠cios:**\n‚Ä¢ Convers√£o at√© 400% maior\n‚Ä¢ Foco total no produto\n‚Ä¢ Otimizada para Google\n\nüí∞ **Pre√ßo:** R$ 500-1.000\n‚è∞ **Prazo:** 3-5 dias\n\nQual produto/servi√ßo voc√™ quer promover?";
    }
    
    if (lowerMsg.includes('site') && !lowerMsg.includes('landing')) {
      return "√ìtima ideia! üåê Um site profissional √© fundamental hoje!\n\n‚ú® **Inclu√≠mos:**\n‚Ä¢ Design responsivo\n‚Ä¢ Otimiza√ß√£o SEO\n‚Ä¢ Integra√ß√£o redes sociais\n‚Ä¢ Formul√°rios de contato\n\nüí∞ **Pre√ßo:** R$ 800-2.000\n‚è∞ **Prazo:** 7-15 dias\n\nPara que tipo de neg√≥cio?";
    }
    
    // ü§î OBJE√á√ïES COMUNS
    if (lowerMsg.includes('caro') || lowerMsg.includes('muito')) {
      return "Entendo sua preocupa√ß√£o! üí≠\n\nMas pensa assim: se seu site trouxer apenas 2 clientes novos por m√™s, j√° pagou o investimento! üìà\n\n‚ú® **Facilidades:**\n‚Ä¢ Parcelamos em 3x sem juros\n‚Ä¢ Garantia de 30 dias\n‚Ä¢ Suporte incluso\n\nQue tal uma consultoria gratuita para ver o que √© melhor para voc√™?";
    }
    
    if (lowerMsg.includes('pensar') || lowerMsg.includes('decidir')) {
      return "Claro! Pensar √© importante! ü§î\n\nMas enquanto voc√™ pensa, que tal eu te enviar alguns exemplos dos nossos trabalhos?\n\nüì± **WhatsApp:** (85) 99199-3833\n\nüí° **Dica:** Tenho apenas 3 vagas este m√™s. Que tal garantir a sua com uma consultoria gratuita?";
    }
    
    // ‚è∞ PERGUNTAS SOBRE PRAZO
    if (lowerMsg.includes('prazo') || lowerMsg.includes('tempo') || lowerMsg.includes('demora') || lowerMsg.includes('quando')) {
      return "Nossos prazos s√£o bem r√°pidos! ‚ö°\n\n‚è∞ **Prazos t√≠picos:**\n‚Ä¢ Landing Page: 3-5 dias\n‚Ä¢ Portf√≥lio: 5-7 dias  \n‚Ä¢ Site Completo: 7-15 dias\n\nüö® **Urgente?** Posso priorizar seu projeto!\n\nQue tipo de projeto voc√™ precisa?";
    }
    
    // üìû CONTATO
    if (lowerMsg.includes('contato') || lowerMsg.includes('telefone') || lowerMsg.includes('whatsapp') || lowerMsg.includes('falar')) {
      return "Claro! Aqui est√£o nossos contatos: üìû\n\nüì± **WhatsApp:** (85) 99199-3833\nüìß **Email:** contato@ronalddigital.com\nüåê **Site:** ronalddigital.com\n\nMas fica aqui comigo tamb√©m! Posso te ajudar com tudo: or√ßamentos, d√∫vidas, exemplos...\n\nQue tipo de projeto voc√™ tem em mente? üòä";
    }
    
    // üìö EXEMPLOS/PORTF√ìLIO
    if (lowerMsg.includes('exemplo') || lowerMsg.includes('trabalho') || lowerMsg.includes('ver') || lowerMsg.includes('mostrar')) {
      return "Adoro mostrar nossos trabalhos! üé®\n\nüåê **Veja nosso portf√≥lio:** ronalddigital.com/portfolio\n\nOu me chama no WhatsApp **(85) 99199-3833** que envio exemplos espec√≠ficos!\n\nMe conta: que tipo de empresa voc√™ tem? Assim posso mostrar casos similares:\n‚Ä¢ Restaurante que aumentou pedidos em 200%\n‚Ä¢ Loja que dobrou vendas online\n‚Ä¢ Profissional que triplicou clientes üéØ";
    }

    // ‚ùì COMO FUNCIONA / PROCESSO
    if (lowerMsg.includes('como funciona') || lowerMsg.includes('processo') || lowerMsg.includes('etapas')) {
      return "Nosso processo √© bem simples e transparente! ‚öôÔ∏è\n\nüìã **1. Briefing** - Entendemos sua necessidade\nüé® **2. Design** - Criamos o layout\nüíª **3. Desenvolvimento** - Constru√≠mos o site\nüß™ **4. Testes** - Garantimos qualidade\nüöÄ **5. Entrega** - Site no ar!\n\n‚è∞ **Prazos:**\n‚Ä¢ Landing Page: 3-5 dias\n‚Ä¢ Portf√≥lio: 5-7 dias\n‚Ä¢ Site Completo: 7-15 dias\n\nQue tipo de projeto voc√™ precisa?";
    }

    // ü§î D√öVIDAS GERAIS
    if (lowerMsg.includes('d√∫vida') || lowerMsg.includes('pergunta') || lowerMsg.includes('n√£o entendi')) {
      return "Sem problemas! Estou aqui para esclarecer tudo! üòä\n\nüí° **Posso te ajudar com:**\n‚Ä¢ Tipos de sites e pre√ßos\n‚Ä¢ Prazos de entrega\n‚Ä¢ Processo de cria√ß√£o\n‚Ä¢ Exemplos de trabalhos\n‚Ä¢ D√∫vidas t√©cnicas\n\nQual sua principal d√∫vida? Pode perguntar √† vontade! ü§ù";
    }
    
    // üîÑ RESPOSTA PADR√ÉO INTELIGENTE
    return "Entendi! üòä Para te ajudar da melhor forma, me conta:\n\nüéØ **Que tipo de projeto voc√™ precisa?**\n‚Ä¢ Site profissional\n‚Ä¢ Landing page para vendas\n‚Ä¢ Portf√≥lio incr√≠vel\n\nüí° **Ou tem alguma d√∫vida espec√≠fica?**\n\nEstou aqui para te ajudar a crescer online! üöÄ";
  };

  const sendMessage = async () => {
    if (!inputText.trim()) return;
    
    addMessage('user', inputText);
    setInputText("");
    
    try {
      // Chama a API real da Sara AI com escuta ativa
      const response = await fetch('/api/agente', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          nome: context.clientName || 'Cliente Chat',
          email: 'cliente@chat.com',
          mensagem: inputText,
          tipoServico: context.projectType || ''
        }),
      });

      const result = await response.json();
      
      if (result.success) {
        // Atualiza contexto com informa√ß√µes da Sara AI
        setContext(prev => ({
          ...prev,
          currentStep: prev.currentStep + 1,
          lastIntent: getIntent(inputText),
          leadScore: result.leadScore || prev.leadScore || 0
        }));
        
        addMessage('bot', result.resposta);
        
        // Log para debug
        console.log('‚úÖ API Sara funcionou:', {
          leadScore: result.leadScore,
          agente: result.agenteAtivo,
          acao: result.proximaAcao
        });
      } else {
        console.warn('‚ö†Ô∏è API retornou erro:', result);
        // Fallback inteligente quando API falha
        const fallbackResponse = getIntelligentFallback(inputText, context);
        addMessage('bot', fallbackResponse);
      }
    } catch (error) {
      console.error('‚ùå Erro ao chamar API Sara:', error);
      console.log('üîÑ Ativando fallback inteligente para:', inputText);
      
      // Fallback inteligente quando h√° erro de conex√£o
      const fallbackResponse = getIntelligentFallback(inputText, context);
      addMessage('bot', fallbackResponse);
      
      // Atualiza contexto mesmo no fallback
      setContext(prev => ({
        ...prev,
        currentStep: prev.currentStep + 1,
        lastIntent: getIntent(inputText),
        usingFallback: true
      }));
    }
  };

  const openChat = () => {
    setIsOpen(true);
    // Sempre limpa mensagens antigas e reseta contexto
    setMessages([]);
    setContext({ currentStep: 0, topics: [] });
    setTimeout(() => {
      addMessage('bot', "üëã Oi! Sou a Sara da Ronald Digital! ‚ú®\n\nComo posso te ajudar hoje?");
    }, 500);
  };

  return (
    <>
      {/* Estilos CSS Customizados */}
      <style dangerouslySetInnerHTML={{ __html: chatButtonStyles }} />
      
      {/* Chat Button - Neuroci√™ncia & Psicologia Comportamental */}
      {!isOpen && (
        <div className="fixed bottom-6 right-6 z-50">
          <div className="relative group">
            {/* Tooltip Animado com Urg√™ncia */}
            <div className="absolute bottom-full right-0 mb-2 opacity-0 group-hover:opacity-100 transition-all duration-500 pointer-events-none transform translate-y-2 group-hover:translate-y-0">
              <div className="bg-gradient-to-r from-purple-900 to-blue-900 text-white px-4 py-3 rounded-xl text-sm whitespace-nowrap shadow-2xl border border-purple-400/30 backdrop-blur-sm">
                <div className="flex items-center gap-2">
                  <div className="w-2 h-2 bg-green-400 rounded-full animate-pulse"></div>
                  <span className="font-medium">üí¨ Sara est√° online agora!</span>
                </div>
                <div className="text-xs text-purple-200 mt-1">
                  ‚ú® Resposta em menos de 30 segundos
                </div>
                {/* Arrow */}
                <div className="absolute top-full right-4 w-0 h-0 border-l-4 border-r-4 border-t-4 border-l-transparent border-r-transparent border-t-purple-900"></div>
              </div>
            </div>
            
            {/* Efeitos de Fundo - Dopamina Visual */}
            <div className="absolute inset-0 rounded-full">
              {/* Anel de energia rotativo */}
              <div className="absolute inset-0 rounded-full border-2 border-transparent bg-gradient-to-r from-purple-500 via-blue-500 to-green-500 animate-spin opacity-60" 
                   style={{ animationDuration: '3s' }}></div>
              
              {/* Pulsos conc√™ntricos - Efeito hipn√≥tico */}
              <div className="absolute inset-0 rounded-full bg-gradient-to-r from-blue-400 to-purple-400 animate-ping opacity-20"></div>
              <div className="absolute inset-0 rounded-full bg-gradient-to-r from-purple-400 to-pink-400 animate-ping opacity-15" 
                   style={{ animationDelay: '0.5s' }}></div>
              <div className="absolute inset-0 rounded-full bg-gradient-to-r from-green-400 to-blue-400 animate-ping opacity-10" 
                   style={{ animationDelay: '1s' }}></div>
            </div>
            
            {/* Button Principal - Gatilho de A√ß√£o */}
            <Button
              onClick={openChat}
              className="chat-button-magnetic chat-button-breathe rounded-full w-16 h-16 bg-gradient-to-br from-purple-600 via-blue-600 to-green-600 hover:from-purple-700 hover:via-blue-700 hover:to-green-700 shadow-2xl hover:shadow-purple-500/25 transition-all duration-300 relative overflow-hidden transform hover:scale-110 active:scale-95"
              style={{
                background: 'linear-gradient(135deg, #8B5CF6 0%, #3B82F6 50%, #10B981 100%)',
                boxShadow: '0 20px 40px rgba(139, 92, 246, 0.3), 0 0 0 1px rgba(255, 255, 255, 0.1)',
              }}
            >
              {/* Avatar da Sara - Conex√£o Emocional */}
              <div className="relative z-10 w-8 h-8 rounded-full overflow-hidden border-2 border-white/30">
                <img 
                  src={saraAvatar} 
                  alt="Sara"
                  className="w-full h-full object-cover"
                  onError={(e) => {
                    e.currentTarget.style.display = 'none';
                    e.currentTarget.parentElement!.innerHTML = '<div class="w-full h-full bg-gradient-to-br from-pink-400 to-purple-500 rounded-full flex items-center justify-center text-white font-bold text-xs">S</div>';
                  }}
                />
                {/* Indicador de status online */}
                <div className="absolute -bottom-1 -right-1 w-3 h-3 bg-green-400 rounded-full border-2 border-white animate-pulse"></div>
              </div>
              
              {/* Efeito de brilho interno */}
              <div className="absolute inset-0 rounded-full bg-gradient-to-r from-white/20 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              
              {/* Part√≠culas flutuantes - Efeito m√°gico */}
              <div className="absolute inset-0 rounded-full overflow-hidden">
                <div className="absolute top-2 left-2 w-1 h-1 bg-white rounded-full animate-ping opacity-60" style={{ animationDelay: '0s' }}></div>
                <div className="absolute top-4 right-3 w-1 h-1 bg-yellow-300 rounded-full animate-ping opacity-60" style={{ animationDelay: '0.7s' }}></div>
                <div className="absolute bottom-3 left-4 w-1 h-1 bg-pink-300 rounded-full animate-ping opacity-60" style={{ animationDelay: '1.4s' }}></div>
                <div className="absolute bottom-2 right-2 w-1 h-1 bg-blue-300 rounded-full animate-ping opacity-60" style={{ animationDelay: '2.1s' }}></div>
              </div>
            </Button>
            
            {/* Contador de urg√™ncia - FOMO (Fear of Missing Out) */}
            {showUrgency && (
              <div className="absolute -top-2 -right-2 bg-gradient-to-r from-red-500 to-orange-500 text-white text-xs font-bold px-2 py-1 rounded-full animate-bounce shadow-lg">
                <span className="animate-pulse">üî•</span>
              </div>
            )}
            
            {/* Pulso de aten√ß√£o ap√≥s 30 segundos */}
            {attentionPulse && (
              <div className="absolute inset-0 rounded-full border-4 border-yellow-400 animate-ping"></div>
            )}
            
            {/* Texto motivacional que aparece ap√≥s 3 segundos */}

          </div>
        </div>
      )}

      {/* Chat Window */}
      {isOpen && (
        <div className="fixed bottom-6 right-6 z-50 w-96 max-w-[calc(100vw-2rem)]">
          <div className="bg-white rounded-lg shadow-2xl border border-gray-200 overflow-hidden">
            {/* Header */}
            <div className="bg-gradient-to-r from-blue-600 to-blue-700 text-white p-4">
              <div className="flex items-center justify-between">
                <div className="flex items-center space-x-3">
                  <div className="relative">
                    <div className="w-10 h-10 bg-white/20 rounded-full flex items-center justify-center overflow-hidden">
                      <img 
                        src={saraAvatar} 
                        alt="Sara - Coordenadora de Projetos"
                        className="w-full h-full object-cover rounded-full"
                        onError={(e) => {
                          // Fallback para o avatar com letra se a imagem n√£o carregar
                          e.currentTarget.style.display = 'none';
                          e.currentTarget.parentElement!.innerHTML = '<div class="w-8 h-8 bg-gradient-to-br from-pink-400 to-purple-500 rounded-full flex items-center justify-center text-white font-bold text-sm">S</div>';
                        }}
                      />
                    </div>
                    <div className="absolute -bottom-1 -right-1 w-4 h-4 bg-green-400 rounded-full border-2 border-white"></div>
                  </div>
                  <div>
                    <h3 className="font-semibold text-lg">Sara</h3>
                    <p className="text-blue-100 text-xs">Coordenadora de Projetos ‚Ä¢ Online</p>
                  </div>
                </div>
                <Button
                  onClick={() => setIsOpen(false)}
                  variant="ghost"
                  size="sm"
                  className="text-white hover:bg-blue-800 h-8 w-8 p-0"
                >
                  <X className="w-4 h-4" />
                </Button>
              </div>
            </div>

            {/* Messages */}
            <div className="h-80 overflow-y-auto p-4 space-y-3 bg-gray-50">
              {messages.map((message) => (
                <div
                  key={message.id}
                  className={`flex items-start space-x-2 ${
                    message.type === 'user' ? 'flex-row-reverse space-x-reverse' : ''
                  }`}
                >
                  {/* Avatar */}
                  <div
                    className={`w-8 h-8 rounded-full flex items-center justify-center text-white text-sm flex-shrink-0 overflow-hidden ${
                      message.type === 'user' ? 'bg-blue-600' : 'bg-gray-100'
                    }`}
                  >
                    {message.type === 'user' ? (
                      <User className="w-4 h-4" />
                    ) : (
                      <img 
                        src={saraAvatar} 
                        alt="Sara"
                        className="w-full h-full object-cover rounded-full"
                        onError={(e) => {
                          e.currentTarget.style.display = 'none';
                          e.currentTarget.parentElement!.innerHTML = '<div class="w-6 h-6 bg-gradient-to-br from-pink-400 to-purple-500 rounded-full flex items-center justify-center text-white font-bold text-xs">S</div>';
                        }}
                      />
                    )}
                  </div>

                  {/* Message */}
                  <div className={`max-w-[75%] ${message.type === 'user' ? 'text-right' : 'text-left'}`}>
                    <div
                      className={`px-4 py-2 rounded-2xl ${
                        message.type === 'user'
                          ? 'bg-blue-600 text-white rounded-br-sm'
                          : 'bg-white text-gray-800 border rounded-bl-sm'
                      }`}
                    >
                      <p className="text-sm whitespace-pre-wrap leading-relaxed">{message.text}</p>
                    </div>
                    <p className={`text-xs text-gray-500 mt-1 ${message.type === 'user' ? 'text-right' : 'text-left'}`}>
                      {message.time}
                    </p>
                  </div>
                </div>
              ))}
            </div>

            {/* Quick Replies */}
            {(() => {
              const getQuickReplies = (): string[] => {
                if (context.currentStep === 0) {
                  return ["Preciso de um site", "Quanto custa?", "Quero uma loja online", "Fazer portf√≥lio"];
                } else if (context.currentStep === 1 && !context.projectType) {
                  return ["Site institucional", "E-commerce", "Landing Page", "Portf√≥lio"];
                } else if (context.currentStep === 2 && !context.businessType) {
                  return ["Restaurante", "Loja f√≠sica", "Consultoria", "Servi√ßos"];
                } else if (context.currentStep === 3 && !context.budget) {
                  return ["At√© R$ 1.000", "R$ 1.000-2.000", "Acima de R$ 2.000", "Vamos conversar"];
                } else if (context.currentStep >= 4) {
                  return ["Sim, quero proposta!", "Ver exemplos", "Chamar no WhatsApp", "Tenho d√∫vidas"];
                }
                return [];
              };

              const quickReplies = getQuickReplies();
              
              return quickReplies.length > 0 && (
                <div className="px-4 py-2 bg-gray-50 border-t">
                  <div className="flex flex-wrap gap-2">
                    {quickReplies.map((text) => (
                      <Button
                        key={text}
                        onClick={() => {
                          setInputText(text);
                          setTimeout(sendMessage, 100);
                        }}
                        variant="outline"
                        size="sm"
                        className="text-xs h-7 px-3 rounded-full border-blue-200 text-blue-600 hover:bg-blue-50"
                      >
                        {text}
                      </Button>
                    ))}
                  </div>
                </div>
              );
            })()}

            {/* Input */}
            <div className="p-4 bg-white border-t">
              <div className="flex items-center space-x-2">
                <Input
                  value={inputText}
                  onChange={(e) => setInputText(e.target.value)}
                  onKeyPress={(e) => e.key === 'Enter' && sendMessage()}
                  placeholder="Digite sua mensagem..."
                  className="flex-1 rounded-full border-gray-300 focus:border-blue-500"
                />
                <Button
                  onClick={sendMessage}
                  disabled={!inputText.trim()}
                  size="sm"
                  className="rounded-full w-10 h-10 p-0 bg-blue-600 hover:bg-blue-700 disabled:opacity-50"
                >
                  <Send className="w-4 h-4" />
                </Button>
              </div>
              
              {/* Footer */}
              <div className="flex items-center justify-between mt-3 text-xs text-gray-500">
                <span className="flex items-center space-x-1">
                  <span>üí¨</span>
                  <span>Chat em tempo real</span>
                </span>
                <button
                  onClick={() => window.open('https://wa.me/5585991993833', '_blank')}
                  className="hover:text-green-600 transition-colors"
                >
                  WhatsApp: (85) 99199-3833
                </button>
              </div>
            </div>
          </div>
        </div>
      )}
    </>
  );
}